package ProyectoRancho17;

import Connection.ClientesDB;
import Connection.ProductosDB;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.text.DecimalFormat;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.SwingConstants;

import javax.swing.table.TableColumn;
import javax.swing.table.DefaultTableCellRenderer;

public class tableProductos extends javax.swing.JFrame {

    ArrayList<Producto_17> producto;

    ProductosDB db = new ProductosDB();

    public tableProductos() {

        initComponents();
        DefaultTableCellRenderer tableRenderer = new DefaultTableCellRenderer();
        tableRenderer.setHorizontalAlignment(JLabel.LEFT); //Aligning the table data centrally.
        tblProducts.setDefaultRenderer(Object.class, tableRenderer);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblProductID = new javax.swing.JLabel();
        lblProductCategory = new javax.swing.JLabel();
        lblBrandName = new javax.swing.JLabel();
        lblProductName = new javax.swing.JLabel();
        lblPricePerUnit = new javax.swing.JLabel();
        txtProductID = new javax.swing.JTextField();
        txtProductName = new javax.swing.JTextField();
        txtDistribuitor = new javax.swing.JTextField();
        txtDescription = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        btnAddNewProduct = new javax.swing.JButton();
        btnClearAllText = new javax.swing.JButton();
        lblSearchID = new javax.swing.JLabel();
        txtSearchID = new javax.swing.JTextField();
        btnSearchID = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProducts = new javax.swing.JTable();
        btnClearOnlyRows = new javax.swing.JButton();
        btnShowAll = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        btnGoToSales = new javax.swing.JButton();
        btnGoToClients1 = new javax.swing.JButton();
        btnAddNewProduct1 = new javax.swing.JButton();
        txtDistribuitor_ID = new javax.swing.JTextField();
        lblDistribuitor = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Productos");

        lblProductID.setText("Product ID:");

        lblProductCategory.setText("Product Name:");

        lblBrandName.setText("Distribuitor:");

        lblProductName.setText("Description:");

        lblPricePerUnit.setText("Price Per Unit:");

        txtProductID.setEditable(false);
        txtProductID.setBackground(new java.awt.Color(204, 204, 204));
        txtProductID.setDocument(new JTextFieldCharLimit(8));
        txtProductID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProductIDActionPerformed(evt);
            }
        });
        txtProductID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtProductIDKeyTyped(evt);
            }
        });

        txtProductName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProductNameActionPerformed(evt);
            }
        });
        txtProductName.setDocument(new JTextFieldCharLimit(50));

        txtDistribuitor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDistribuitorActionPerformed(evt);
            }
        });
        txtDistribuitor.setDocument(new JTextFieldCharLimit(50));

        txtPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPriceKeyTyped(evt);
            }
        });
        txtPrice.setDocument(new JTextFieldCharLimit(9));

        btnAddNewProduct.setText("Add New Product");
        btnAddNewProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewProductActionPerformed(evt);
            }
        });

        btnClearAllText.setText("Clear All ");
        btnClearAllText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearAllTextActionPerformed(evt);
            }
        });

        lblSearchID.setText("Search Product ID: ");

        txtSearchID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchIDActionPerformed(evt);
            }
        });
        txtSearchID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchIDKeyTyped(evt);
            }
        });
        txtSearchID.setDocument(new JTextFieldCharLimit(8));

        btnSearchID.setText("Find");
        btnSearchID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchIDActionPerformed(evt);
            }
        });

        tblProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Product Name", "Distribuitor ID ", "Distribuitor", "Description", "Price Per Unit"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblProducts);

        btnClearOnlyRows.setText("Delete Selected Row");
        btnClearOnlyRows.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearOnlyRowsActionPerformed(evt);
            }
        });

        btnShowAll.setText("Show All Products");
        btnShowAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowAllActionPerformed(evt);
            }
        });

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnGoToSales.setText("Orders");
        btnGoToSales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoToSalesActionPerformed(evt);
            }
        });

        btnGoToClients1.setText("Clients");
        btnGoToClients1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoToClients1ActionPerformed(evt);
            }
        });

        btnAddNewProduct1.setText("Get a Product ID");
        btnAddNewProduct1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewProduct1ActionPerformed(evt);
            }
        });

        txtDistribuitor_ID.setDocument(new JTextFieldCharLimit(4));
        txtDistribuitor_ID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDistribuitor_IDActionPerformed(evt);
            }
        });
        txtDistribuitor.setDocument(new JTextFieldCharLimit(50));

        lblDistribuitor.setText("ID Distribuitor:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblProductName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblProductID)
                                        .addComponent(lblProductCategory)
                                        .addComponent(lblBrandName))
                                    .addGap(28, 28, 28))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(lblDistribuitor)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnAddNewProduct1, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                                .addComponent(btnClearAllText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnAddNewProduct, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                                .addComponent(txtProductID)
                                .addComponent(txtProductName)
                                .addComponent(txtDistribuitor)
                                .addComponent(txtDistribuitor_ID)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblPricePerUnit)
                            .addGap(31, 31, 31)
                            .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(173, 173, 173)
                .addComponent(lblSearchID)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnGoToClients1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnShowAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnClearOnlyRows, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSearchID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtSearchID))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(btnGoToSales, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(85, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnGoToSales, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblProductID)
                            .addComponent(txtProductID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSearchID)
                            .addComponent(txtSearchID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblProductCategory)
                            .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearchID))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblBrandName)
                            .addComponent(txtDistribuitor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnClearOnlyRows))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDistribuitor_ID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDistribuitor)
                            .addComponent(btnShowAll))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblProductName)
                            .addComponent(txtDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPricePerUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAddNewProduct)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnClearAllText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAddNewProduct1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnGoToClients1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addComponent(btnExit)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        txtDescription.setDocument(new JTextFieldCharLimit(80));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtProductNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProductNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProductNameActionPerformed

    private void btnAddNewProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewProductActionPerformed

int id_product = Integer.parseInt(txtProductID.getText());
int id_distribuitor = Integer.parseInt(txtDistribuitor_ID.getText());
        double price = Double.parseDouble(txtPrice.getText());
        Distribuidor_17 dis = new Distribuidor_17(id_distribuitor, txtDistribuitor.getText(), null);
        Producto_17 pr = new Producto_17(id_product, txtDescription.getText(), txtDistribuitor.getText(), txtProductName.getText(), price);
       
        
        
        if(db.findProduct(txtProductID.getText()) == null){
              db.InsertIntoProducto(pr, dis);
        
              showAllProducts();
       
        txtSearchID.setText("");    
        
        JOptionPane.showMessageDialog(null, "Insert was successful");
              
         txtProductID.setText("");
         txtDescription.setText("");
         txtDistribuitor.setText("");
         txtProductName.setText("");
         txtPrice.setText("");
         txtSearchID.setText("");
         txtDistribuitor_ID.setText("");
        }else{
            JOptionPane.showMessageDialog(null, "ID Already Registered");
        }
        
      
        
        
    }//GEN-LAST:event_btnAddNewProductActionPerformed

    private void btnClearAllTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearAllTextActionPerformed

        
         DefaultTableModel model = (DefaultTableModel)tblProducts.getModel();
        int rowCount = model.getRowCount();
        //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        
         txtProductID.setText("");
         txtDescription.setText("");
         txtDistribuitor.setText("");
         txtProductName.setText("");
         txtPrice.setText("");
         txtSearchID.setText("");
         txtDistribuitor_ID.setText("");
        
       
        


    }//GEN-LAST:event_btnClearAllTextActionPerformed

    private void btnSearchIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchIDActionPerformed
        if (findProduct()) {

            DefaultTableModel model = (DefaultTableModel) tblProducts.getModel();
            Object product_id = model.getValueAt(0, 0);
            Object product_name = model.getValueAt(0, 1);
            Object distribuitor_id = model.getValueAt(0, 2);
            Object distribuitor = model.getValueAt(0, 3);
            Object description = model.getValueAt(0, 4);
            Object price = model.getValueAt(0, 5);

            
           txtProductID.setText((product_id.toString()));
            txtProductName.setText((product_name.toString()));
            txtDistribuitor.setText((distribuitor.toString()));
            txtDescription.setText((description.toString()));
            txtPrice.setText((price.toString()));
            txtDistribuitor_ID.setText((distribuitor_id.toString()));
       
        } else {
            JOptionPane.showMessageDialog(null, "ID: " + txtSearchID.getText() + ". Not found");
            txtProductID.setText("");
            txtDescription.setText("");
            txtDistribuitor.setText("");
            txtProductName.setText("");
            txtPrice.setText("");
            txtSearchID.setText("");
            txtDistribuitor_ID.setText((""));
     

        }

    }//GEN-LAST:event_btnSearchIDActionPerformed

    public boolean findProduct() {
        DefaultTableModel model = (DefaultTableModel) tblProducts.getModel();

        boolean found = false;
        int rowCount = model.getRowCount();
        //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }

        Producto_17 pr = new Producto_17();

        pr = db.findProduct(txtSearchID.getText());

        if (pr != null) {
            model.addRow(new Object[]{pr.getProduct_id(), pr.getProduct_name(), pr.getID_Distribuitor(), pr.getDistribuitor(), pr.getDescription(), pr.getPrice_per_unit()});
            return found = true;
        }

        return found;

    }

    private void btnShowAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowAllActionPerformed

        this.showAllProducts();
        
          txtProductID.setText("");
            txtDescription.setText("");
            txtDistribuitor.setText("");
            txtProductName.setText("");
            txtPrice.setText("");
            txtSearchID.setText("");
            txtDistribuitor_ID.setText((""));

    }//GEN-LAST:event_btnShowAllActionPerformed

    
    private void showAllProducts(){
          DefaultTableModel model = (DefaultTableModel) tblProducts.getModel();
        try {
            producto = db.ListProducts();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(tableProductos.class.getName()).log(Level.SEVERE, null, ex);
        }
        int rowCount = model.getRowCount();
        //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }

        for (Producto_17 pr : producto) {
            model.addRow(new Object[]{pr.getProduct_id(), pr.getProduct_name(), pr.getID_Distribuitor(), pr.getDistribuitor(), pr.getDescription(), pr.getPrice_per_unit()});
        }
    }
    private void txtProductIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProductIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProductIDActionPerformed

    private void txtProductIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProductIDKeyTyped
        char c = evt.getKeyChar();
        if (!((Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE)))) {
            evt.consume();
        }
    }//GEN-LAST:event_txtProductIDKeyTyped

    private void txtPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPriceKeyTyped
        char c = evt.getKeyChar();
        if (!((Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE) || (c == KeyEvent.VK_PERIOD)))) {
            evt.consume();
        }

        if (c == '.' && txtPrice.getText().contains(".")) {
            evt.consume();
        }
    }//GEN-LAST:event_txtPriceKeyTyped

    private void txtSearchIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchIDKeyTyped
        char c = evt.getKeyChar();
        if (!((Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE)))) {
            evt.consume();
        }
    }//GEN-LAST:event_txtSearchIDKeyTyped

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        super.dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnGoToSalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoToSalesActionPerformed

        UserLevel level = new UserLevel();

        if (UserLevel.level == 1 || UserLevel.level == 3) {
            tableOrders program1 = new tableOrders();
            program1.setVisible(true);
            dispose();
        } else {
            JOptionPane.showMessageDialog(null, "Not allowed");
        }
    }//GEN-LAST:event_btnGoToSalesActionPerformed

    private void txtSearchIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchIDActionPerformed

    private void btnGoToClients1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoToClients1ActionPerformed
        UserLevel level = new UserLevel();

        if (UserLevel.level == 1 || UserLevel.level == 3) {
            tableClientes test1 = new tableClientes();
            test1.setVisible(true);
            super.dispose();
        } else {
            JOptionPane.showMessageDialog(null, "Not allowed");
        }
    }//GEN-LAST:event_btnGoToClients1ActionPerformed

    private void txtDistribuitorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDistribuitorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDistribuitorActionPerformed

    private void btnAddNewProduct1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewProduct1ActionPerformed
        
        txtProductID.setText(RandomAll.generateProductID());
        
        
        
    }//GEN-LAST:event_btnAddNewProduct1ActionPerformed

    private void txtDistribuitor_IDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDistribuitor_IDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDistribuitor_IDActionPerformed

    private void btnClearOnlyRowsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearOnlyRowsActionPerformed

        int des = -1;
        DefaultTableModel model = (DefaultTableModel)tblProducts.getModel();

        int i = -1;

        i = tblProducts.getSelectedRow();

        if(i>=0){
            Object id_obj_ex = model.getValueAt(i, 0);
            des = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this PRODUCT? ID: " + id_obj_ex.toString() ,"Delete", JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        }else{
            JOptionPane.showMessageDialog(null, "Please select a row");
        }

        if(i >= 0 && des == 0){
            ProductosDB productos = new ProductosDB();
            Object id_obj = model.getValueAt(i, 0);
            productos.delete((int)id_obj);
            this.showAllProducts();
            JOptionPane.showMessageDialog(null, "Product ID was successfully deleted");
        }

    }//GEN-LAST:event_btnClearOnlyRowsActionPerformed

    public void listProducts() throws IOException {

    }

    public void searchProduct() throws IOException {

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws FileNotFoundException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(tableProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(tableProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(tableProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(tableProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new tableProductos().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddNewProduct;
    private javax.swing.JButton btnAddNewProduct1;
    private javax.swing.JButton btnClearAllText;
    private javax.swing.JButton btnClearOnlyRows;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnGoToClients1;
    private javax.swing.JButton btnGoToSales;
    private javax.swing.JButton btnSearchID;
    private javax.swing.JButton btnShowAll;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBrandName;
    private javax.swing.JLabel lblDistribuitor;
    private javax.swing.JLabel lblPricePerUnit;
    private javax.swing.JLabel lblProductCategory;
    private javax.swing.JLabel lblProductID;
    private javax.swing.JLabel lblProductName;
    private javax.swing.JLabel lblSearchID;
    private javax.swing.JTable tblProducts;
    private javax.swing.JTextField txtDescription;
    private javax.swing.JTextField txtDistribuitor;
    private javax.swing.JTextField txtDistribuitor_ID;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtProductID;
    private javax.swing.JTextField txtProductName;
    private javax.swing.JTextField txtSearchID;
    // End of variables declaration//GEN-END:variables

}
