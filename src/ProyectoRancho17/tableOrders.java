/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ProyectoRancho17;

import Connection.ClientesDB;
import Connection.OrdersDB;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.sql.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import javax.swing.JFrame;

/**
 *
 * @author user
 */
public class tableOrders extends javax.swing.JFrame {
    
    
        ArrayList<Compra_17> orders;
    
    
    OrdersDB db = new OrdersDB();
    
    /**
     * Creates new form table
     */
    public tableOrders() {
        initComponents();
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGender = new javax.swing.ButtonGroup();
        lblUserID = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblLastName = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblAddress = new javax.swing.JLabel();
        txtNoOrder = new javax.swing.JTextField();
        txtDateOrder = new javax.swing.JTextField();
        txtQuantity = new javax.swing.JTextField();
        txtProductID = new javax.swing.JTextField();
        txtClientID = new javax.swing.JTextField();
        lblSearchID = new javax.swing.JLabel();
        txtSearchNoOrder = new javax.swing.JTextField();
        btnSearchID = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrders = new javax.swing.JTable();
        btnClearOnlyRows = new javax.swing.JButton();
        btnShowAll = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        btnGoToSales = new javax.swing.JButton();
        btnClearAllRows = new javax.swing.JButton();
        btnGoToProducts1 = new javax.swing.JButton();
        btnGoToProducts2 = new javax.swing.JButton();
        btnClearAllRows1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Orders");

        lblUserID.setText("No. Order:");

        lblName.setText("Date Order:");

        lblLastName.setText("Quantity:");

        lblEmail.setText("Product ID:");

        lblAddress.setText("Cllient ID:");

        txtNoOrder.setDocument(new JTextFieldCharLimit(10));
        txtNoOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNoOrderActionPerformed(evt);
            }
        });
        txtNoOrder.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNoOrderKeyTyped(evt);
            }
        });

        txtDateOrder.setEditable(false);
        txtDateOrder.setBackground(new java.awt.Color(204, 204, 204));
        txtDateOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDateOrderActionPerformed(evt);
            }
        });
        txtDateOrder.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDateOrderKeyTyped(evt);
            }
        });
        LocalDate tiempo = java.time.LocalDate.now();
        txtDateOrder.setText(tiempo.toString());

        txtQuantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtQuantityKeyTyped(evt);
            }
        });

        txtProductID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProductIDActionPerformed(evt);
            }
        });
        txtProductID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtProductIDKeyTyped(evt);
            }
        });

        txtClientID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtClientIDKeyTyped(evt);
            }
        });

        lblSearchID.setText("No. Order: ");

        txtSearchNoOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchNoOrderActionPerformed(evt);
            }
        });
        txtSearchNoOrder.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchNoOrderKeyTyped(evt);
            }
        });

        btnSearchID.setText("Find");
        btnSearchID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchIDActionPerformed(evt);
            }
        });

        tblOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Client ID", "Client Name", "Product ID", "Product Name", "Quantity", "Distribuitor", "No. Order", "Date Order"
            }
        ));
        jScrollPane1.setViewportView(tblOrders);

        btnClearOnlyRows.setText("Delete Selected Row");
        btnClearOnlyRows.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearOnlyRowsActionPerformed(evt);
            }
        });

        btnShowAll.setText("Show All Orders");
        btnShowAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowAllActionPerformed(evt);
            }
        });

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnGoToSales.setText("Clients");
        btnGoToSales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoToSalesActionPerformed(evt);
            }
        });

        btnClearAllRows.setText("Clear All");
        btnClearAllRows.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearAllRowsActionPerformed(evt);
            }
        });

        btnGoToProducts1.setText("Generate New Order");
        btnGoToProducts1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoToProducts1ActionPerformed(evt);
            }
        });

        btnGoToProducts2.setText("Products");
        btnGoToProducts2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoToProducts2ActionPerformed(evt);
            }
        });

        btnClearAllRows1.setText("Generate ID Order");
        btnClearAllRows1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearAllRows1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUserID)
                    .addComponent(lblName)
                    .addComponent(lblLastName)
                    .addComponent(lblEmail)
                    .addComponent(lblAddress))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtNoOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnClearAllRows1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                        .addComponent(lblSearchID))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtClientID, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                        .addComponent(txtProductID)
                        .addComponent(txtQuantity, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(txtDateOrder, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                        .addComponent(btnGoToProducts1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnShowAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnClearOnlyRows, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSearchID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtSearchNoOrder)
                    .addComponent(btnClearAllRows, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnExit, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(btnGoToSales, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGoToProducts2, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE))
                .addGap(32, 32, 32))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSearchID)
                            .addComponent(txtSearchNoOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSearchID)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnClearOnlyRows)
                        .addGap(13, 13, 13)
                        .addComponent(btnShowAll)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnClearAllRows))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUserID)
                            .addComponent(txtNoOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnClearAllRows1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblName)
                            .addComponent(txtDateOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblLastName)
                            .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEmail)
                            .addComponent(txtProductID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAddress)
                            .addComponent(txtClientID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)
                        .addComponent(btnGoToProducts1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnGoToSales, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnGoToProducts2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(btnExit)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtDateOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDateOrderActionPerformed
        
       
   
       
    }//GEN-LAST:event_txtDateOrderActionPerformed

    private void btnSearchIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchIDActionPerformed

        if(findOrder()){
            
                DefaultTableModel model = (DefaultTableModel)tblOrders.getModel();
                Object client_id = model.getValueAt(0,0);
                Object client_name = model.getValueAt(0,1);
                Object product_id = model.getValueAt(0,2);
                Object product_name = model.getValueAt(0,3);
                Object quantity = model.getValueAt(0,4);
                Object distribuitor = model.getValueAt(0,5);
                Object no_order = model.getValueAt(0,6);
                Object date_order = model.getValueAt(0,7);
                
                
                txtClientID.setText((client_id.toString()));
                txtDateOrder.setText(date_order.toString());
                txtQuantity.setText(quantity.toString());
                txtProductID.setText(product_id.toString());
                txtNoOrder.setText(no_order.toString());
                
                
              
        }else{
            JOptionPane.showMessageDialog(null, "No. Order: " + txtSearchNoOrder.getText() +  ". Not found");
                     
              
                txtClientID.setText((""));
                txtDateOrder.setText("");
                txtQuantity.setText("");
                txtProductID.setText("");
               
          
              
        }
    }//GEN-LAST:event_btnSearchIDActionPerformed

    
        public boolean findOrder(){
        DefaultTableModel model = (DefaultTableModel)tblOrders.getModel();
          
        boolean found = false;
        int rowCount = model.getRowCount();
        //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        
        Compra_17 or = new Compra_17();
        
     
        or = db.findOrder(txtSearchNoOrder.getText());
 
       if(or != null){
            model.addRow(new Object[]{or.getClient_id(), or.getClient_name(), or.getProduct_ID(), or.getProduct_name(), or.getCantidad(), or.getName_distribuitor(), or.getNo_orden(), or.getFecha_de_compra()});
            return found=true;
       }
       
       return found;
        
    }
    
    
    
    private void btnClearOnlyRowsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearOnlyRowsActionPerformed

        
        
        int des = -1;
        DefaultTableModel model = (DefaultTableModel)tblOrders.getModel();
        
        int i = -1;
        
        i = tblOrders.getSelectedRow();
       
        if(i>=0){
           Object id_obj_ex = model.getValueAt(i, 6);
            des = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this ORDER? ID: " + id_obj_ex.toString() ,"Delete", JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        }else{
            JOptionPane.showMessageDialog(null, "Please select a row");
        }
       
       
        if(i >= 0 && des == 0){
            OrdersDB order_db = new OrdersDB();
            Object id_obj = model.getValueAt(i, 6);
            order_db.delete(id_obj.toString());
            this.showAllOrders();
             txtClientID.setText((""));
                txtDateOrder.setText("");
                txtQuantity.setText("");
                txtProductID.setText("");
                txtSearchNoOrder.setText("");
                txtNoOrder.setText("");
            JOptionPane.showMessageDialog(null, "No. Order ID was successfully deleted");
        }
             
    }//GEN-LAST:event_btnClearOnlyRowsActionPerformed

    private void btnShowAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowAllActionPerformed
        this.showAllOrders();
    }//GEN-LAST:event_btnShowAllActionPerformed

    private void txtNoOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNoOrderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNoOrderActionPerformed

    private void txtNoOrderKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNoOrderKeyTyped
        char c = evt.getKeyChar();
        if (!((Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE)))) {
            evt.consume();
        }
    }//GEN-LAST:event_txtNoOrderKeyTyped

    private void txtSearchNoOrderKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchNoOrderKeyTyped
        char c = evt.getKeyChar();
        if (!((Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE)))) {
            evt.consume();
        }
    }//GEN-LAST:event_txtSearchNoOrderKeyTyped

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        super.dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    private void txtProductIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProductIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProductIDActionPerformed

    private void btnGoToSalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoToSalesActionPerformed
         UserLevel level = new UserLevel();
        
        if(UserLevel.level == 1 || UserLevel.level == 3){
                tableClientes test1 = new tableClientes();
        test1.setVisible(true);
        super.dispose();
        }else{
                   JOptionPane.showMessageDialog(null, "Not allowed");
        }
    }//GEN-LAST:event_btnGoToSalesActionPerformed

    private void txtDateOrderKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDateOrderKeyTyped

    }//GEN-LAST:event_txtDateOrderKeyTyped

    private void txtQuantityKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQuantityKeyTyped

    }//GEN-LAST:event_txtQuantityKeyTyped

    private void txtClientIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtClientIDKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtClientIDKeyTyped

    private void txtProductIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProductIDKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProductIDKeyTyped

    private void txtSearchNoOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchNoOrderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchNoOrderActionPerformed

    private void btnClearAllRowsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearAllRowsActionPerformed

        DefaultTableModel model = (DefaultTableModel)tblOrders.getModel();
        int rowCount = model.getRowCount();
        //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        
        txtClientID.setText("");
        txtDateOrder.setText("");
        txtNoOrder.setText("");
        txtProductID.setText("");
        txtQuantity.setText("");
        txtSearchNoOrder.setText("");
  
        
    }//GEN-LAST:event_btnClearAllRowsActionPerformed

    private void btnGoToProducts1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoToProducts1ActionPerformed
        
    int quantity = Integer.parseInt(txtQuantity.getText());
     int product_id = Integer.parseInt(txtProductID.getText());
     
       int  client_id = Integer.parseInt(txtClientID.getText());
       String fecha = txtDateOrder.getText();
       Date fecha_de_compra = Date.valueOf(fecha);
        Compra_17 comp = new Compra_17(txtNoOrder.getText(), fecha_de_compra, quantity, product_id, client_id);
        
        
        if(db.findOrder(txtNoOrder.getText()) == null){
             db.InsertInto(comp);
        
              showAllOrders();
              
               txtClientID.setText("");
        txtDateOrder.setText("");
        txtNoOrder.setText("");
        txtProductID.setText("");
        txtQuantity.setText("");
        txtSearchNoOrder.setText("");
        
        JOptionPane.showMessageDialog(null, "Insert was successful");
        }else{
            JOptionPane.showMessageDialog(null, "ID Already Registered");
        }
        
        
        
    }//GEN-LAST:event_btnGoToProducts1ActionPerformed

    private void btnGoToProducts2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoToProducts2ActionPerformed
           if(UserLevel.level == 1 || UserLevel.level == 2){
            
                 tableProductos test1 = new tableProductos();
        test1.setVisible(true);
        super.dispose();
        }else{
              JOptionPane.showMessageDialog(null, "Not Allowed");
        }
    }//GEN-LAST:event_btnGoToProducts2ActionPerformed

    private void btnClearAllRows1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearAllRows1ActionPerformed
        
        
        txtNoOrder.setText(RandomAll.generateNoOrder());
        
    }//GEN-LAST:event_btnClearAllRows1ActionPerformed

   
    
    public void showAllOrders(){
         DefaultTableModel model = (DefaultTableModel) tblOrders.getModel();
        try {
            orders = db.ListOrders();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(tableProductos.class.getName()).log(Level.SEVERE, null, ex);
        }
        int rowCount = model.getRowCount();
        //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }

        for (Compra_17 or : orders) {
            model.addRow(new Object[]{or.getClient_id(), or.getClient_name(), or.getProduct_ID(), or.getName_product(), or.getCantidad(), or.getName_distribuitor(), or.getNo_orden(), or.getFecha_de_compra()});
        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws FileNotFoundException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(tableOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(tableOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(tableOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(tableOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new tableOrders().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClearAllRows;
    private javax.swing.JButton btnClearAllRows1;
    private javax.swing.JButton btnClearOnlyRows;
    private javax.swing.JButton btnExit;
    private javax.swing.ButtonGroup btnGender;
    private javax.swing.JButton btnGoToProducts1;
    private javax.swing.JButton btnGoToProducts2;
    private javax.swing.JButton btnGoToSales;
    private javax.swing.JButton btnSearchID;
    private javax.swing.JButton btnShowAll;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblSearchID;
    private javax.swing.JLabel lblUserID;
    private javax.swing.JTable tblOrders;
    private javax.swing.JTextField txtClientID;
    private javax.swing.JTextField txtDateOrder;
    private javax.swing.JTextField txtNoOrder;
    private javax.swing.JTextField txtProductID;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JTextField txtSearchNoOrder;
    // End of variables declaration//GEN-END:variables

}
